name: 'prerelease-latest'
on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
env:
  tagName: prerelease-latest
  releaseName: prerelease-latest
  preRelease: true
  CARGO_TERM_COLOR: always
jobs:
  release-amd64:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: install rust
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: |
          npm install
      - name: build and upload release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ env.tagName }} # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: ${{ env.releaseName }}
          releaseBody: Autobuilded packages of latest 'main' branch commit
          releaseDraft: false
          prerelease: ${{ env.preRelease }}

  release-armv8_rpi_bullseye:
    # needs: [release-amd64]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: build release
        uses: pguyot/arm-runner-action@v2
        with:
          base_image: dietpi:rpi_armv8_bookworm #dietpi:rpi_armv8_bullseye
          cpu: cortex-a53
          cpu_info: cpuinfo/raspberrypi_zero2_w_arm64
          bind_mount_repository: true
          image_additional_mb: 4096
          optimize_image: false
          commands: |
            # Rust complains (rightly) that $HOME doesn't match eid home
            export HOME=/root
            # Workaround to CI worker being stuck on Updating crates.io index
            export CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse
            # Install setup prerequisites
            apt update -y
            apt install -y ca-certificates curl gnupg
            mkdir -p /etc/apt/keyrings
            curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
            echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_22.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
            apt update -y
            apt install -y nodejs libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            . "$HOME/.cargo/env"            
            npm install
            npm install --save-dev @tauri-apps/cli
            npm run tauri build
            pwd
      - name: upload release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.releaseName }}
          tag_name: ${{ env.tagName }}
          prerelease: ${{ env.preRelease }}
          generate_release_notes: true
          files: |
            ${{ github.workspace }}/src-tauri/target/release/bundle/deb/*.deb
