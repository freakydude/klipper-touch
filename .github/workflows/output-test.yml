name: 'output-test'

on: [push]

jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      package_version: ${{ steps.get_version.outputs.PACKAGE_VERSION }}

    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - id: get_version
        run: |
          echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      - name: create artifact 1
        run: |
          touch test_0.1.0_upload.txt
          echo "a test" >> test_0.1.0_upload.txt
      - name: Release RPI deb p1
        uses: softprops/action-gh-release@v1
        with:
          name: test-arti
          tag_name: test-arti-tag
          files: test*upload.txt

  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - env:
          PACKAGE_VERSION: ${{needs.job1.outputs.package_version}}
        run: echo "$PACKAGE_VERSION"
      - name: create artifact 2
        run: |
          touch test2_0.1.0_upload.txt
          echo "a test" >> test2_0.1.0_upload.txt
      - name: Release RPI deb p2
        uses: softprops/action-gh-release@v1
        with:
          name: test-arti
          tag_name: test-arti-tag
          files: test*upload.txt

  publish-tauri:
    needs: [job1, job2]
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
      - name: install frontend dependencies
        run: |
          npm install
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: test-arti-tag # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: test-arti
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false

  job3:
    runs-on: ubuntu-latest
    needs: publish-tauri
    steps:
      - name: create artifact 3
        run: |
          touch test3_0.1.0_upload.txt
          echo "a test" >> test3_0.1.0_upload.txt
      - name: Release RPI deb p3
        uses: softprops/action-gh-release@v1
        with:
          name: test-arti
          tag_name: test-arti-tag
          files: test*upload.txt
